{
	"name": "01_02_PL_SRC_LDZ_INCR_MSSQL",
	"properties": {
		"activities": [
			{
				"name": "V_FILENAME_MSSQL_INCR_copy1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "V_FILENAME",
					"value": {
						"value": "@concat(toLower(pipeline().parameters.P_TABLENAME),\n'_',\npipeline().parameters.P_LOAD_TYPE,\n'_', \n    formatDateTime(utcnow(),'yyyyMMddTHHmmss'), \n    '.parquet')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "V_PATH_MSSQL_INCR_copy1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "V_PATH",
					"value": {
						"value": "@concat(\n    toUpper(pipeline().parameters.P_PATH), \n    '/',\n    formatDateTime(utcNow(),'yyyy'), \n    '/', \n    formatDateTime(utcNow(),'MM'), \n    '/', \n    formatDateTime(utcNow(),'dd')    \n  \n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "V_FILENAME_MSSQL_INCR_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "V_PATH_MSSQL_INCR_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(toUpper(pipeline().parameters.P_FULL_LOAD_FLAG),toUpper('Y'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CP_MSSQL_INCREMENTAL_FLAG_TRUE",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT ',    \n    pipeline().parameters.P_SELECT_COLUMN,\n    ',GETUTCDATE() _LOAD_TIME FROM [',\n    \n    pipeline().parameters.P_SYSTEM,\n    '].[',\n    pipeline().parameters.P_SCHEMA,\n    '].[',\n    pipeline().parameters.P_TABLENAME\n   \n)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DT_SRC_MSSQL",
									"type": "DatasetReference",
									"parameters": {
										"P_TABLENAME": {
											"value": "@pipeline().parameters.P_TABLENAME",
											"type": "Expression"
										},
										"P_SCHEMA": {
											"value": "@pipeline().parameters.P_SCHEMA",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DT_PRQ_DYN",
									"type": "DatasetReference",
									"parameters": {
										"P_PATH": {
											"value": "@variables('V_PATH')",
											"type": "Expression"
										},
										"P_CONTAINER": {
											"value": "@pipeline().parameters.P_CONTAINER_1",
											"type": "Expression"
										},
										"P_FILENAME": {
											"value": "@variables('V_FILENAME')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "NB_GET_WATERMARK_LOGS_RAW_FLAG_TRUE",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "CP_MSSQL_INCREMENTAL_FLAG_TRUE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Workspace/Users/raphaelfreixo@gmail.com/ADB_NB_GET_WATERMARK_LOGSFILE",
								"baseParameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_CONTAINER_1",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@variables('V_PATH')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@variables('V_FILENAME')",
										"type": "Expression"
									},
									"P_WATERMARK_COLUMN": {
										"value": "@pipeline().parameters.P_WATERMARK_COLUMN",
										"type": "Expression"
									},
									"P_STORAGE_ACCOUNT": {
										"value": "@pipeline().parameters.P_STORAGEACCOUNT",
										"type": "Expression"
									},
									"P_TABLENAME": {
										"value": "@pipeline().parameters.P_TABLENAME",
										"type": "Expression"
									},
									"P_SERVER_NAME": {
										"value": "@pipeline().parameters.P_SERVER",
										"type": "Expression"
									},
									"P_SCHEMA_NAME": {
										"value": "@pipeline().parameters.P_SCHEMA",
										"type": "Expression"
									},
									"P_APPLICATION": {
										"value": "@pipeline().parameters.P_APPLICATION",
										"type": "Expression"
									},
									"P_DATA_DOMAIN": {
										"value": "@pipeline().parameters.P_DATA_DOMAIN",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PL_CP_ACT_RAW_copy1_copy1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "CP_MSSQL_INCREMENTAL_FLAG_TRUE",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_CP_ACT_RAW",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"P_APPLICATION": {
										"value": "@pipeline().parameters.P_APPLICATION",
										"type": "Expression"
									},
									"P_SCHEMA_NAME": {
										"value": "@pipeline().parameters.P_SCHEMA",
										"type": "Expression"
									},
									"P_SERVER_NAME": {
										"value": "@pipeline().parameters.P_SERVER",
										"type": "Expression"
									},
									"P_TABLENAME": {
										"value": "@pipeline().parameters.P_TABLENAME",
										"type": "Expression"
									},
									"P_LOAD_TYPE": {
										"value": "@string('F')",
										"type": "Expression"
									},
									"P_STORAGE_ACCOUNT": {
										"value": "@pipeline().parameters.P_STORAGEACCOUNT",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@pipeline().parameters.P_PATH",
										"type": "Expression"
									},
									"P_FILE_NAME": {
										"value": "@variables('V_FILENAME')",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_CONTAINER_1",
										"type": "Expression"
									},
									"P_ADF_NAME": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"P_PL_NAME": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"P_PL_GROUP_ID": {
										"value": "@pipeline().GroupId",
										"type": "Expression"
									},
									"P_PL_ID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"P_TRG_ID": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"P_TRG_NAME": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"P_TRG_TYPE": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"P_TRG_TIME": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"P_TRG_PL_NAME": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"P_TRG_PL_ID": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"P_DATAREAD_KB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.dataRead",
										"type": "Expression"
									},
									"P_DATAWRITTEN_KB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.dataWritten",
										"type": "Expression"
									},
									"P_DURATION_ACT_SEG": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].duration",
										"type": "Expression"
									},
									"P_ROWSCOPIED_UNIT": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.rowsCopied",
										"type": "Expression"
									},
									"P_ROWSREAD_UNIT": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.rowsRead",
										"type": "Expression"
									},
									"P_STATUS": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].status",
										"type": "Expression"
									},
									"P_THROUGHTPUT_MB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.throughput",
										"type": "Expression"
									},
									"P_COPYDURATION_SEG": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.copyDuration",
										"type": "Expression"
									},
									"P_START_TIME": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].start",
										"type": "Expression"
									},
									"P_PROJECT_NAME": {
										"value": "@pipeline().parameters.P_PROJECT_NAME",
										"type": "Expression"
									},
									"P_DATA_DOMAIN": {
										"value": "@pipeline().parameters.P_DATA_DOMAIN",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SCR_UPDATE_WATERMARK_FLAG_TRUE",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "NB_GET_WATERMARK_LOGS_RAW_FLAG_TRUE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference",
								"parameters": {
									"P_FQDN_SRV": "srv-ey-event.database.windows.net",
									"P_DB_NAME": "sql-ey-event"
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "P_TABLENAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_TABLENAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SCHEMA",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SCHEMA",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_PROJECT_NAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_PROJECT_NAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SERVER",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SERVER",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_LAST_CDC_DATE",
												"type": "String",
												"value": {
													"value": "@activity('NB_GET_WATERMARK_LOGS_RAW').output.runOutput",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "update [dbo].[CONTROL_TABLE] set \r\nWATERMARK = coalesce(\r\nCASE WHEN @P_LAST_CDC_DATE='None' THEN null \r\nWHEN @P_LAST_CDC_DATE > FORMAT(CURRENT_TIMESTAMP,'yyyyMMdd') THEN  FORMAT(CURRENT_TIMESTAMP,'yyyyMMdd')\r\nELSE @P_LAST_CDC_DATE END\r\n,WATERMARK)\r\n where [SERVER] = @P_SERVER and TABLENAME = @P_TABLENAME and PROJECT_NAME= @P_PROJECT_NAME AND [SCHEMA]= @P_SCHEMA"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "SCR_UPDATE_FLAG_FULL_LOAD",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "SCR_UPDATE_WATERMARK_FLAG_TRUE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference",
								"parameters": {
									"P_FQDN_SRV": "srv-ey-event.database.windows.net",
									"P_DB_NAME": "sql-ey-event"
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "P_TABLENAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_TABLENAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SCHEMA",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SCHEMA",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_PROJECT_NAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_PROJECT_NAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SERVER",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SERVER",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "update [dbo].[CONTROL_TABLE] set \r\nFULL_LOAD_FLAG = 'Y'\r\n where [SERVER] = @P_SERVER and TABLENAME = @P_TABLENAME and PROJECT_NAME= @P_PROJECT_NAME AND [SCHEMA]= @P_SCHEMA"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "CP_MSSQL_INCREMENTAL_copy1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT ',    \n    pipeline().parameters.P_SELECT_COLUMN,\n    ',GETUTCDATE() _LOAD_TIME FROM [',\n    \n    pipeline().parameters.P_SYSTEM,\n    '].[',\n    pipeline().parameters.P_SCHEMA,\n    '].[',\n    pipeline().parameters.P_TABLENAME,\n    '] WHERE ',\n    pipeline().parameters.P_WATERMARK_COLUMN,\n    ' > ',\n    '''',\n    pipeline().parameters.P_WATERMARK,\n    ''''\n)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DT_SRC_MSSQL",
									"type": "DatasetReference",
									"parameters": {
										"P_TABLENAME": {
											"value": "@pipeline().parameters.P_TABLENAME",
											"type": "Expression"
										},
										"P_SCHEMA": {
											"value": "@pipeline().parameters.P_SCHEMA",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DT_PRQ_DYN",
									"type": "DatasetReference",
									"parameters": {
										"P_PATH": {
											"value": "@variables('V_PATH')",
											"type": "Expression"
										},
										"P_CONTAINER": {
											"value": "@pipeline().parameters.P_CONTAINER_1",
											"type": "Expression"
										},
										"P_FILENAME": {
											"value": "@variables('V_FILENAME')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "NB_GET_WATERMARK_LOGS_RAW_copy1",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "CP_MSSQL_INCREMENTAL_copy1",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Workspace/Users/raphaelfreixo@gmail.com/ADB_NB_GET_WATERMARK_LOGSFILE",
								"baseParameters": {
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_CONTAINER_1",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@variables('V_PATH')",
										"type": "Expression"
									},
									"P_FILENAME": {
										"value": "@variables('V_FILENAME')",
										"type": "Expression"
									},
									"P_WATERMARK_COLUMN": {
										"value": "@pipeline().parameters.P_WATERMARK_COLUMN",
										"type": "Expression"
									},
									"P_STORAGE_ACCOUNT": {
										"value": "@pipeline().parameters.P_STORAGEACCOUNT",
										"type": "Expression"
									},
									"P_TABLENAME": {
										"value": "@pipeline().parameters.P_TABLENAME",
										"type": "Expression"
									},
									"P_SERVER_NAME": {
										"value": "@pipeline().parameters.P_SERVER",
										"type": "Expression"
									},
									"P_SCHEMA_NAME": {
										"value": "@pipeline().parameters.P_SCHEMA",
										"type": "Expression"
									},
									"P_APPLICATION": {
										"value": "@pipeline().parameters.P_APPLICATION",
										"type": "Expression"
									},
									"P_DATA_DOMAIN": {
										"value": "@pipeline().parameters.P_DATA_DOMAIN",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PL_CP_ACT_RAW_copy1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "CP_MSSQL_INCREMENTAL_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_CP_ACT_RAW",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"P_APPLICATION": {
										"value": "@pipeline().parameters.P_APPLICATION",
										"type": "Expression"
									},
									"P_SCHEMA_NAME": {
										"value": "@pipeline().parameters.P_SCHEMA",
										"type": "Expression"
									},
									"P_SERVER_NAME": {
										"value": "@pipeline().parameters.P_SERVER",
										"type": "Expression"
									},
									"P_TABLENAME": {
										"value": "@pipeline().parameters.P_TABLENAME",
										"type": "Expression"
									},
									"P_LOAD_TYPE": {
										"value": "@pipeline().parameters.P_LOAD_TYPE",
										"type": "Expression"
									},
									"P_STORAGE_ACCOUNT": {
										"value": "@pipeline().parameters.P_STORAGEACCOUNT",
										"type": "Expression"
									},
									"P_PATH": {
										"value": "@pipeline().parameters.P_PATH",
										"type": "Expression"
									},
									"P_FILE_NAME": {
										"value": "@variables('V_FILENAME')",
										"type": "Expression"
									},
									"P_CONTAINER": {
										"value": "@pipeline().parameters.P_CONTAINER_1",
										"type": "Expression"
									},
									"P_ADF_NAME": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"P_PL_NAME": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"P_PL_GROUP_ID": {
										"value": "@pipeline().GroupId",
										"type": "Expression"
									},
									"P_PL_ID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"P_TRG_ID": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"P_TRG_NAME": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"P_TRG_TYPE": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"P_TRG_TIME": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"P_TRG_PL_NAME": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"P_TRG_PL_ID": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"P_DATAREAD_KB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.dataRead",
										"type": "Expression"
									},
									"P_DATAWRITTEN_KB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.dataWritten",
										"type": "Expression"
									},
									"P_DURATION_ACT_SEG": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].duration",
										"type": "Expression"
									},
									"P_ROWSCOPIED_UNIT": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.rowsCopied",
										"type": "Expression"
									},
									"P_ROWSREAD_UNIT": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.rowsRead",
										"type": "Expression"
									},
									"P_STATUS": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].status",
										"type": "Expression"
									},
									"P_THROUGHTPUT_MB": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.throughput",
										"type": "Expression"
									},
									"P_COPYDURATION_SEG": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.copyDuration",
										"type": "Expression"
									},
									"P_START_TIME": {
										"value": "@activity('CP_MSSQL_INCREMENTAL').output.executionDetails[0].start",
										"type": "Expression"
									},
									"P_PROJECT_NAME": {
										"value": "@pipeline().parameters.P_PROJECT_NAME",
										"type": "Expression"
									},
									"P_DATA_DOMAIN": {
										"value": "@pipeline().parameters.P_DATA_DOMAIN",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SCR_UPDATE_WATERMARK",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "PL_CP_ACT_RAW_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference",
								"parameters": {
									"P_FQDN_SRV": "srv-ey-event.database.windows.net",
									"P_DB_NAME": "sql-ey-event"
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "P_TABLENAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_TABLENAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SCHEMA",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SCHEMA",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_PROJECT_NAME",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_PROJECT_NAME",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_SERVER",
												"type": "String",
												"value": {
													"value": "@pipeline().parameters.P_SERVER",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "P_LAST_CDC_DATE",
												"type": "String",
												"value": {
													"value": "@activity('NB_GET_WATERMARK_LOGS_RAW').output.runOutput",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "update [dbo].[CONTROL_TABLE] set \r\nWATERMARK = coalesce(\r\nCASE WHEN @P_LAST_CDC_DATE='None' THEN null \r\nWHEN @P_LAST_CDC_DATE > FORMAT(CURRENT_TIMESTAMP,'yyyyMMdd') THEN  FORMAT(CURRENT_TIMESTAMP,'yyyyMMdd')\r\nELSE @P_LAST_CDC_DATE END\r\n,WATERMARK)\r\n where [SERVER] = @P_SERVER and TABLENAME = @P_TABLENAME and PROJECT_NAME= @P_PROJECT_NAME AND [SCHEMA]= @P_SCHEMA"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"P_TECH": {
				"type": "string"
			},
			"P_SERVER": {
				"type": "string"
			},
			"P_APPLICATION": {
				"type": "string"
			},
			"P_SCHEMA": {
				"type": "string"
			},
			"P_TABLENAME": {
				"type": "string"
			},
			"P_LOAD_TYPE": {
				"type": "string"
			},
			"P_WATERMARK": {
				"type": "string"
			},
			"P_CHK_BIG_NUMBER": {
				"type": "string"
			},
			"P_ACTIVE": {
				"type": "string"
			},
			"P_SENSITIVE_DATA": {
				"type": "string"
			},
			"P_SELECT_COLUMN": {
				"type": "string"
			},
			"P_SELECT_COLUMN_MAX": {
				"type": "string"
			},
			"P_PATH": {
				"type": "string"
			},
			"P_WATERMARK_COLUMN": {
				"type": "string"
			},
			"P_SYSTEM": {
				"type": "string"
			},
			"P_CONTAINER_1": {
				"type": "string"
			},
			"P_STORAGEACCOUNT": {
				"type": "string"
			},
			"P_PROJECT_NAME": {
				"type": "string"
			},
			"P_DATA_DOMAIN": {
				"type": "string"
			},
			"P_FULL_LOAD_FLAG": {
				"type": "string"
			}
		},
		"variables": {
			"V_PATH": {
				"type": "String"
			},
			"V_FILENAME": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-03-02T02:42:13Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}